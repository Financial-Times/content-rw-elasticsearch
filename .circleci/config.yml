version: 2.1

orbs:
  ft-golang-ci: financial-times/golang-ci@dev:alpha

jobs:
  dredd:
    working_directory: /go/src/github.com/Financial-Times/content-rw-elasticsearch
    docker:
      - image: golang:1
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_ACCESS_TOKEN
        environment:
          GOPATH: /go
          ELASTICSEARCH_SAPI_ENDPOINT: http://localhost:9000
          GITHUB_USERNAME: ${GITHUB_USERNAME}
          GITHUB_TOKEN: ${GITHUB_TOKEN}
      - image: peteclarkft/ersatz:stable
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_ACCESS_TOKEN
    steps:
      - checkout
      - run:
          name: Download dredd
          command: |
            GOPRIVATE="github.com/Financial-Times"
            git config --global url."https://$GITHUB_USERNAME:$GITHUB_TOKEN@github.com/".insteadOf "https://github.com/"
            curl -sL https://deb.nodesource.com/setup_11.x | bash -
            DEBIAN_FRONTEND=noninteractive apt-get install -y nodejs=11.\*
            npm install -g --unsafe-perm --loglevel warn --user 0 --no-progress dredd@11.2.19
            rm -rf /var/lib/apt/lists/*
            GO111MODULE=off go get -u github.com/myitcv/gobin
      - run:
          name: Load ersatz-fixtures.yml to ersatz image
          command: "curl -X POST --data-binary @_ft/ersatz-fixtures.yml -H \"Content-type: text/x-yaml\" http://localhost:9000/__configure"
      - run:
          name: Go Build
          command: |
            GOPRIVATE="github.com/Financial-Times"
            git config --global url."https://$GITHUB_USERNAME:$GITHUB_TOKEN@github.com/".insteadOf "https://github.com/"
            go build -mod=readonly -v ./cmd/content-rw-elasticsearch
      - run:
          name: Dredd API Testing
          command: dredd

workflows:
  tests_and_docker:
    jobs:
      - ft-golang-ci/build-and-test:
          working-dir: "/content-rw-elasticsearch"
          name: build-and-test-project
          executor-name: ft-golang-ci/default-with-elasticsearch
          context: dockerhub-shared
      - dredd:
          context: dockerhub-shared
      - ft-golang-ci/docker-build:
          name: build-docker-image
          requires:
            - build-and-test-project
          context: dockerhub-shared
  snyk-scanning:
    jobs:
      - ft-golang-ci/scan:
          name: scan-dependencies
          context: cm-team-snyk
