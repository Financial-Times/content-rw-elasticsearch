version: 2.1

orbs:
  ft-golang-ci: financial-times/golang-ci@1

jobs:
  dredd:
    working_directory: /go/src/github.com/Financial-Times/content-rw-elasticsearch
    docker:
      - image: golang:1
        environment:
          GOPATH: /go
          ELASTICSEARCH_SAPI_ENDPOINT: http://localhost:9000
          GITHUB_USERNAME: ${GITHUB_USERNAME}
          GITHUB_TOKEN: ${GITHUB_TOKEN}
          KAFKA_PROXY_ADDR: "http://localhost:9000"
          KAFKA_ADDR: "localhost:29092"
          OPA_URL: "http://localhost:8181"
      - image: confluentinc/cp-zookeeper:latest
        environment:
          ZOOKEEPER_CLIENT_PORT: 2181
          ZOOKEEPER_TICK_TIME: 2000
          ZOOKEEPER_ADMIN_ENABLE_SERVER: "false"
      - image: confluentinc/cp-kafka:latest
        environment:
          KAFKA_BROKER_ID: 1
          KAFKA_ZOOKEEPER_CONNECT: localhost:2181
          KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_HOST://localhost:29092
          KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - image: peteclarkft/ersatz:stable
        auth:
          username: $DOCKERHUB_USERNAME
          password: $DOCKERHUB_ACCESS_TOKEN
      - image: openpolicyagent/opa:latest
        command: [ "run", "--server", "--addr=0.0.0.0:8181", "--log-level=error", "--log-format=json"]
    steps:
      - checkout
      - run:
          name: Wait for Kafka to start
          command: sleep 5;    
      - run:
          name: Unset ssh instead of https
          command: git config --global --unset url."ssh://git@github.com".insteadOf
      - run:
          name: Set GITHUB_USERNAME and GITHUB_TOKEN
          command: git config --global url."https://${GITHUB_USERNAME}:${GITHUB_TOKEN}@github.com".insteadOf "https://github.com"
      - run:
          name: Go Build
          command: |
            GOPRIVATE="github.com/Financial-Times"
            git config --global url."https://$GITHUB_USERNAME:$GITHUB_TOKEN@github.com/".insteadOf "https://github.com/"
            go build -mod=readonly -v ./cmd/content-rw-elasticsearch
      - run:
          name: Load ersatz-fixtures.yml to ersatz image
          command: "curl -X POST --data-binary @_ft/ersatz-fixtures.yml -H \"Content-type: text/x-yaml\" http://localhost:9000/__configure"
      - run:
          name: Download Dredd
          command: |
            curl -sL https://deb.nodesource.com/setup_12.x | bash -
            DEBIAN_FRONTEND=noninteractive apt-get install -y nodejs=12.\*
            npm install -g --unsafe-perm --loglevel warn --user 0 --no-progress dredd@8.0.0
            rm -rf /var/lib/apt/lists/*
      - run:
          name: Add a dummy OPA policy.
          command: |
            curl --location --request PUT 'localhost:8181/v1/policies/c1d20fbc-e9bc-44fb-8b88-0e01d6b13225' \
            --header 'Content-Type: text/plain' \
            --data 'package content_rw_elasticsearch/content_msg_evaluator" default skip := false'
      - run:
          name: Dredd API Testing
          command: dredd
workflows:
  tests_and_docker:
    jobs:      
      - ft-golang-ci/build-and-test:
          name: build-and-test-project
          working-dir: "/content-rw-elasticsearch"
          executor-name: ft-golang-ci/default-with-elasticsearch
          context:
            - dockerhub-shared
            - cm-team-github
      - ft-golang-ci/docker-build:
          name: build-docker-image
          requires:
            - build-and-test-project
          context:
            - cm-team-github
      - dredd:
          context:
            - cm-team-github

