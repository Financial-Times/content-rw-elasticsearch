version: 2
jobs:
  build:
    working_directory: /go/src/github.com/Financial-Times/content-rw-elasticsearch
    docker:
    - image: golang:1
      environment:
        CIRCLE_TEST_REPORTS: /tmp/test-results
        CIRCLE_COVERAGE_REPORT: /tmp/coverage-results
    steps:
    - checkout
    - run:
        name: External dependencies
        command: |
          GO111MODULE=off go get -u github.com/mattn/goveralls
          GO111MODULE=off go get -u github.com/jstemmer/go-junit-report
    - run:
        name: Make result folders
        command: |
          mkdir -p ${CIRCLE_TEST_REPORTS}
          mkdir -p ${CIRCLE_COVERAGE_REPORT}
    - run:
        name: Go build
        command: go build -mod=readonly -v ./cmd/content-rw-elasticsearch
    - run:
        name: Run tests
        command: go test -race -cover -coverprofile=${CIRCLE_COVERAGE_REPORT}/coverage.out ./... | go-junit-report > ${CIRCLE_TEST_REPORTS}/junit.xml
    - run:
        name: Upload coverage
        command: goveralls -coverprofile=${CIRCLE_COVERAGE_REPORT}/coverage.out -service=circle-ci -repotoken=${COVERALLS_TOKEN}
    - store_test_results:
        path: /tmp/test-results
  dockerfile:
    working_directory: /content-rw-elasticsearch
    docker:
    - image: docker:18.03
    steps:
    - checkout
    - setup_docker_engine
    - run:
        name: Build Dockerfile
        command: docker build .
  dredd:
    working_directory: /go/src/github.com/Financial-Times/content-rw-elasticsearch
    docker:
      - image: bankrs/golang-dredd:go1.13.7-dredd11.2.19
        environment:
          GOPATH: /go
          ELASTICSEARCH_SAPI_ENDPOINT: http://localhost:9000
      - image: peteclarkft/ersatz:stable
    steps:
      - checkout
      - run:
          name: Load ersatz-fixtures.yml to ersatz image
          command: "curl -X POST --data-binary @_ft/ersatz-fixtures.yml -H \"Content-type: text/x-yaml\" http://localhost:9000/__configure"
      - run:
          name: Go Build
          command: go build -mod=readonly -v ./cmd/content-rw-elasticsearch
      - run:
          name: Dredd API Testing
          command: dredd
workflows:
  version: 2
  test-and-build-docker:
    jobs:
      - build
      - dredd
      - dockerfile:
          requires:
            - build